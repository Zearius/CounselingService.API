{"ast":null,"code":"import { catchError, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CounselingService {\n  constructor(http) {\n    this.http = http;\n    this.counselingUrl = 'https://localhost:7186/api/v1/';\n  }\n  getCounselings() {\n    return this.http.get(this.counselingUrl).pipe(tap(data => console.log('ALL: ', JSON.stringify(data))), catchError(this.handleError));\n  }\n  handleError(err) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = 'An error occured: ${err.errror.message}';\n    } else {\n      errorMessage = 'Server returned code: ${err.status}, error message is ${err.message}';\n    }\n    console.error(errorMessage);\n    return throwError(() => errorMessage);\n  }\n}\nCounselingService.ɵfac = function CounselingService_Factory(t) {\n  return new (t || CounselingService)(i0.ɵɵinject(i1.HttpClient));\n};\nCounselingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CounselingService,\n  factory: CounselingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAK9D,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,kBAAa,GAAG,gCAAgC;EAEhB;EAExCC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAwB,IAAI,CAACC,aAAa,CAAC,CAACC,IAAI,CAClER,GAAG,CAACS,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,EAACV,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAAC;EACzF;EAEQA,WAAW,CAACC,GAAsB;IACxC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,GAAG,CAACE,KAAK,YAAYC,UAAU,EAAE;MACnCF,YAAY,GAAG,yCAAyC;KACzD,MACI;MACHA,YAAY,GAAG,sEAAsE;;IAEvFN,OAAO,CAACO,KAAK,CAACD,YAAY,CAAC;IAC3B,OAAOf,UAAU,CAAC,MAAMe,YAAY,CAAC;EACvC;;AApBWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAiB,SAAjBjB,iBAAiB;EAAAkB,YAFhB;AAAM","names":["catchError","tap","throwError","CounselingService","constructor","http","getCounselings","get","counselingUrl","pipe","data","console","log","JSON","stringify","handleError","err","errorMessage","error","ErrorEvent","factory","providedIn"],"sourceRoot":"","sources":["F:\\CounselingServicesAPI\\CounselingService.API\\CounselingService-FrontEnd\\ClientApp\\src\\app\\CounselingServices\\counseling.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ICounselingServices } from \"./ICounselingServices\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, catchError, tap, throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CounselingService {\r\n  private counselingUrl = 'https://localhost:7186/api/v1/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCounselings() : Observable<ICounselingServices[]> {\r\n    return this.http.get<ICounselingServices[]>(this.counselingUrl).pipe(\r\n      tap(data => console.log('ALL: ', JSON.stringify(data))),catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = 'An error occured: ${err.errror.message}';\r\n    }\r\n    else { \r\n      errorMessage = 'Server returned code: ${err.status}, error message is ${err.message}';\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}